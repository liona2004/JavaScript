const lastLetterOfLastName = lastName[lastName.length - 1]; // т.е. длина строки переменной минус 1 смвол

/* операторы сравнения возвращают либо true, либо false: == если равно. 
Двойной знак, один знак равенства означал бы присваивание (which assigns the value on the right of the operator to a variable on the left)
== возвращает true, если два значения равны */

// Сравнение разных типов. При сравнении значений разных типов приводит каждое из них к числу
// Оператор строгого равенства === проверяет равенство без приведения типов, т.е. если значения имеют разные типы (строка и число, например), то проверка возвращает false

// In JavaScript, you can determine the type of a variable or a value with the typeof operator, as follows:
typeof 3 // number
typeof '3' // string

// оператор неравенства != противоположно ==
// оператор !== строго не равно

// Логический оператор И && (конъюнкция) будет true только, если все операнды содержат значение true. 11 - true, 01 - false, 10 - false, 00 - false
if (num > 5) {
  if (num < 10) {
    return "Yes";
  }
}
return "No";

// ИЛИ

if (num > 5 && num < 10) {
  return "Yes";
}
return "No";

// Логический оператор ИЛИ || одно или другое, то вывод true дизъюнкция


/* Условный (тернарный) оператор принимает три операнда
a ? b : c, where a is the condition, b is the code to run when the condition returns true, and c is the code to run when the condition returns false

function checkEqual(a, b) {
  return a === b ? "Equal" : "Not Equal";
}
checkEqual(1, 2);

function isDivideBy(number, a, b) {
  return (number % a === 0 && number % b === 0) ? true : false; // Can we divide it? деление без остатка
}


*/
function checkSign(num) { 
  return (num === 0) ? "zero" // if наподобие if.. else 
  : (num < 0) ? "negative" // else if
  : "positive";   // else
}
checkSign(10);
